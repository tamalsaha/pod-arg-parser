apiVersion: v1
kind: Pod
metadata:
  annotations:
    dns.alpha.kubernetes.io/internal: api.internal.kubedb.k8s.local
    kubernetes.io/config.hash: 3f2ffd817df2c4bd914bb56eb68f2078
    kubernetes.io/config.mirror: 3f2ffd817df2c4bd914bb56eb68f2078
    kubernetes.io/config.seen: 2018-06-06T10:32:38.787349347Z
    kubernetes.io/config.source: file
    scheduler.alpha.kubernetes.io/critical-pod: ""
  creationTimestamp: 2018-06-06T10:34:18Z
  labels:
    k8s-app: kube-apiserver
  name: kube-apiserver-ip-172-20-42-71.ec2.internal
  namespace: kube-system
  resourceVersion: "394"
  selfLink: /api/v1/namespaces/kube-system/pods/kube-apiserver-ip-172-20-42-71.ec2.internal
  uid: 2b0222b5-6975-11e8-9946-02c994f86a66
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - mkfifo /tmp/pipe; (tee -a /var/log/kube-apiserver.log < /tmp/pipe & ) ; exec
      /usr/local/bin/kube-apiserver --address=127.0.0.1 --admission-control=Initializers,NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,NodeRestriction,ResourceQuota
      --allow-privileged=true --anonymous-auth=false --apiserver-count=1 --authorization-mode=RBAC
      --basic-auth-file=/srv/kubernetes/basic_auth.csv --client-ca-file=/srv/kubernetes/ca.crt
      --cloud-provider=aws --etcd-quorum-read=false --etcd-servers-overrides=/events#http://127.0.0.1:4002
      --etcd-servers=http://127.0.0.1:4001 --insecure-port=8080 --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP
      --proxy-client-cert-file=/srv/kubernetes/apiserver-aggregator.cert --proxy-client-key-file=/srv/kubernetes/apiserver-aggregator.key
      --requestheader-allowed-names=aggregator --requestheader-client-ca-file=/srv/kubernetes/apiserver-aggregator-ca.cert
      --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-group-headers=X-Remote-Group
      --requestheader-username-headers=X-Remote-User --secure-port=443 --service-cluster-ip-range=100.64.0.0/13
      --storage-backend=etcd2 --tls-cert-file=/srv/kubernetes/server.cert --tls-private-key-file=/srv/kubernetes/server.key
      --token-auth-file=/srv/kubernetes/known_tokens.csv --v=2 > /tmp/pipe 2>&1
    image: gcr.io/google_containers/kube-apiserver:v1.9.6
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 15
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 15
    name: kube-apiserver
    ports:
    - containerPort: 443
      hostPort: 443
      name: https
      protocol: TCP
    - containerPort: 8080
      hostPort: 8080
      name: local
      protocol: TCP
    resources:
      requests:
        cpu: 150m
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/ssl
      name: etcssl
      readOnly: true
    - mountPath: /etc/pki/tls
      name: etcpkitls
      readOnly: true
    - mountPath: /etc/pki/ca-trust
      name: etcpkica-trust
      readOnly: true
    - mountPath: /usr/share/ssl
      name: usrsharessl
      readOnly: true
    - mountPath: /usr/ssl
      name: usrssl
      readOnly: true
    - mountPath: /usr/lib/ssl
      name: usrlibssl
      readOnly: true
    - mountPath: /usr/local/openssl
      name: usrlocalopenssl
      readOnly: true
    - mountPath: /var/ssl
      name: varssl
      readOnly: true
    - mountPath: /etc/openssl
      name: etcopenssl
      readOnly: true
    - mountPath: /var/log/kube-apiserver.log
      name: logfile
    - mountPath: /srv/kubernetes
      name: srvkube
      readOnly: true
    - mountPath: /srv/sshproxy
      name: srvsshproxy
      readOnly: true
  dnsPolicy: ClusterFirst
  hostNetwork: true
  nodeName: ip-172-20-42-71.ec2.internal
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  terminationGracePeriodSeconds: 30
  tolerations:
  - key: CriticalAddonsOnly
    operator: Exists
  - effect: NoExecute
    operator: Exists
  volumes:
  - hostPath:
      path: /etc/ssl
      type: ""
    name: etcssl
  - hostPath:
      path: /etc/pki/tls
      type: ""
    name: etcpkitls
  - hostPath:
      path: /etc/pki/ca-trust
      type: ""
    name: etcpkica-trust
  - hostPath:
      path: /usr/share/ssl
      type: ""
    name: usrsharessl
  - hostPath:
      path: /usr/ssl
      type: ""
    name: usrssl
  - hostPath:
      path: /usr/lib/ssl
      type: ""
    name: usrlibssl
  - hostPath:
      path: /usr/local/openssl
      type: ""
    name: usrlocalopenssl
  - hostPath:
      path: /var/ssl
      type: ""
    name: varssl
  - hostPath:
      path: /etc/openssl
      type: ""
    name: etcopenssl
  - hostPath:
      path: /var/log/kube-apiserver.log
      type: ""
    name: logfile
  - hostPath:
      path: /srv/kubernetes
      type: ""
    name: srvkube
  - hostPath:
      path: /srv/sshproxy
      type: ""
    name: srvsshproxy
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: 2018-06-06T10:32:41Z
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: 2018-06-06T10:32:47Z
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: 2018-06-06T10:32:41Z
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://1880910e5861706641f6f8c45ba28f695124a346577b780287b41c44341c8769
    image: gcr.io/google_containers/kube-apiserver:v1.9.6
    imageID: docker-pullable://gcr.io/google_containers/kube-apiserver@sha256:1bb16ddef9edd8142125ac2443e36986c051b0df808db907648ac9d68e0d5f23
    lastState: {}
    name: kube-apiserver
    ready: true
    restartCount: 0
    state:
      running:
        startedAt: 2018-06-06T10:32:47Z
  hostIP: 172.20.42.71
  phase: Running
  podIP: 172.20.42.71
  qosClass: Burstable
  startTime: 2018-06-06T10:32:41Z

